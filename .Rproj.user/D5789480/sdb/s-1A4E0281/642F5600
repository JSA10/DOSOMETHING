{
    "collab_server" : "",
    "contents" : "#practise project - electoral commission data for political donations\nlibrary(tidyverse)\nlibrary(lubridate)\n\ndonate <- read_csv(\"results.csv\") %>%\n    # Change error in date and then coerce character date variables to datetime\n    mutate( AcceptedDate = ifelse(AcceptedDate == \"17/06/2106\", \"17/06/2016\", AcceptedDate),\n            ReceivedDate = ifelse(ReceivedDate == \"17/06/2106\", \"17/06/2016\", ReceivedDate),\n            AcceptedDate = dmy(AcceptedDate),\n            ReceivedDate = dmy(ReceivedDate),\n            ReportedDate = dmy(ReportedDate),\n            #remove Â£ sign from donation value and make numeric\n            Value = parse_number(Value)\n           )\n\nglimpse(donate)\nView(head(donate,100))\n\n\n#-------------------------------------------------------------------------------\n\n#data organisation\n# Time series: AcceptedDate, ReceivedDate, ReportedDate,\n#              ReportingPeriodName = time category\n# Important Metrics: Value, Counts of donations\n# Important Categories/Dimensions:\n#   For parties: RegulatedEntityName, RegulatedEntityType,\n#   For donors: DonorName, DonorStatus, Post Code, DonationType\n# Keys: ECRef, RegulatedEntityID, DonorID\n\n\n\n# Questions and Hypotheses\n# Biggest value donations go to Conservatives\n# Labour have largest volume of small donations\n# More donations for referendum than 2015 ge election?\n# Does this data set hold predictors for value and timings of future donations?\n# If we follow the money we can get insight into motivations of political parties\n# Do any donors seem to be connected to new or controversial policies? Could we\n# infer undue influence?\n# what other data could we join to this that would help with insight or prediction?\n\n\n#EDA ---------------------------------------------------------------------------\n# explore date ranges\n\nsummary(donate$AcceptedDate)\n#Min.      1st Qu.       Median         Mean      3rd Qu.         Max.\n#\"2001-01-01\" \"2006-01-06\" \"2009-09-17\" \"2009-08-24\" \"2013-11-05\" \"2017-03-27\"\n#NA's\n#\"617\"\n\nsummary(donate$ReceivedDate)\n#        Min.      1st Qu.       Median         Mean      3rd Qu.         Max.\n#\"2001-01-01\" \"2005-12-09\" \"2009-08-28\" \"2009-08-11\" \"2013-12-02\" \"2017-03-25\"\n#NA's\n#\"2244\"\n\nsummary(donate$ReportedDate)\n#        Min.      1st Qu.       Median         Mean      3rd Qu.         Max.\n#\"2001-02-01\" \"2006-04-26\" \"2009-10-30\" \"2009-11-13\" \"2014-01-30\" \"2017-12-23\"\n#NA's\n#\"21\"\n\n# fewest missing values for ReportedDate\n\n#variables to change from character to date\n#AcceptedDate,\n#ReceivedDate,\n#ReportedDate\n\n#ReportingPeriodName could be split into month and year variables\n#OR keep if meaningful and do the same with one of the other date variables\n\n#explore time line\nggplot(donate, aes(AcceptedDate, Value)) +\n    geom_line()\n#Warning message:\n#Removed 617 rows containing missing values (geom_path).\n\n#want to group dates in order to better see trend\nhist(donate$AcceptedDate, breaks = 20)\n\n#be good to compare three dates against each other - so freqpoly I think best\n?geom_freqpoly\n\nAccepted_timeline <- donate %>%\n    ggplot() +\n        geom_freqpoly(aes(AcceptedDate, colour = \"AcceptedDate\"), binwidth = 90) +\n        geom_freqpoly(aes(ReceivedDate, colour = \"ReceivedDate\"), binwidth = 90) +\n        geom_freqpoly(aes(ReportedDate, colour = \"ReportedDate\"), binwidth = 90)\n\n# count of donations accepted peak for general elections, with highest for ge2015\n\n\n#donate %>%\n#    mutate(months = month(ReportedDate, label = TRUE))\n#    ggplot(aes(ReportedDate, Value)) +\n#        geom_line()\n\ndonate %>%\n    mutate(month_reported = month(ReportedDate, label = TRUE)) %>%\n    ggplot() +\n        geom_point(aes(month_reported, Value))\n\n\n#ggplot(donate, aes(AcceptedDate)) +\n#    geom_histogram() +\n#    coord_cartesian(ylim = c(0, 10))\n#focusing the y axis reveals just the one outlier, which from the data looks to\n#be a type 2106 == 2016\n# add a change to\n\n\n# Top entities ------------------------------------------------------------\n\n#need to filter EntityName to just the top (parties)\ntop50_entities <- donate %>%\n    count(RegulatedEntityName, sort = TRUE) %>%\n    top_n(50, n)\n\nView(top50_entities)\nnames(donate)\n\n#top_entity_stats <- donate %>%\n#    filter(RegulatedEntityName == top50_entities$RegulatedEntityName) %>%\n#    group_by(RegulatedEntityName) %>%\n#    summarise(\n#        donated = sum(Value)\n#    ) %>%\n#    arrange(desc(donated))\n\n#View(top_entity_stats)\n\n#top50_entities <- top50_entities %>%\n#    left_join(top_entity_stats, by = \"RegulatedEntityName\")\n\n\n# summary stats by party\nparty_summary <- donate %>%\n    group_by(RegulatedEntityName) %>%\n    summarise(\n        no.donations = n(),\n        avg.donation = mean(Value),\n        median.donation = median(Value),\n        min.donation = min(Value),\n        max.donation = max(Value),\n        total.donation = sum(Value)\n    ) %>%\n    top_n(50, no.donations) %>%\n    arrange(desc(total.donation))\n\nParty_name <- party_summary$RegulatedEntityName\n\nlibrary(forcats)\nparty_summary <- party_summary %>%\n    mutate(Party = factor(RegulatedEntityName, levels = Party_name))\n\nView(party_summary)\n#issues with avg I think (unless such a high value due to a few large outliers skewing distribution)\n\n# explore distribution of donations\nhist(donate$Value, breaks = 50)\n\n#add party factor to donate dataset\n\nparty_list <- donate %>%\n                count(RegulatedEntityName, n(), sort = TRUE)\n\nhead(party_list)\n\ndonate <- donate %>%\n    mutate(Party = factor(RegulatedEntityName, levels = party_list))\n\nView(head(donate))\n\ndonate %>%\n    group_by(Party) %>%\n    ggplot(aes(Party, Value)) +\n        geom_col()\n\ndonate %>%\n    count(DonorName, sort = TRUE)\n\ndonors <- donate %>%\n    count(Party) %>%\n    top_n(50, n)\n\n\n#create new data frame just with data would want to model, forecast or analyse quantitatively\ndonate_mod <- donate %>%\n    select()\n\n\npairs(donate)\n\nglimpse(donate)\n\nggplot() +\n        geom_bar(aes(Party))\n\n\n\nggplot(donate) +\n    geom_bar(aes(Party, Value))\n\n\n\nhead(donate)\n\n",
    "created" : 1493671756774.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4140486054",
    "id" : "642F5600",
    "lastKnownWriteTime" : 1495230120,
    "last_content_update" : 1495230120299,
    "path" : "~/Documents/Github/DOSOMETHING/Donations.r",
    "project_path" : "Donations.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}